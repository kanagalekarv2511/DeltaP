DockerFile 

ROM nginx:latest
COPY ./nginx.conf /etc/nginx/
RUN rm /etc/nginx/conf.d/*
COPY ./web.conf /etc/nginx/conf.d
COPY ./lb.conf /etc/nginx/conf.d
RUN mkdir /var/www
RUN mkdir /var/www/example1.com
RUN mkdir /var/www/example2.com
RUN mkdir /var/www/example3.com
COPY ./indexexample1.html /var/www/example1.com/index.html
COPY ./indexexample2.html /var/www/example2.com/index.html
COPY ./indexexample3.html /var/www/example3.com/index.html
==================================================
web.conf

server {

    listen       9001;
    index  index.html;
    add_header Custom-Header "Application 1";

    location / {
    root   /var/www/example1.com;

    }
}

server {

    listen       9002;
    index  index.html;
    add_header Custom-Header "Application 2";

    location / {
    root   /var/www/example2.com;
    }
}

server {

    listen       9003;
    index  index.html;
    add_header Custom-Header "Application 3";

    location / {
    root   /var/www/example3.com;
    }
}
==================================================

lb.conf 

upstream backend_servers {

    #hash $request_uri;
    #ip_hash;
    server 127.0.0.1:9001 weight=4;
    server 127.0.0.1:9002 weight=3;
    server 127.0.0.1:9003 weight=2;
}

server {
    listen 80;
    server_name  deltacontainernginxmess1;

    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Real-IP  $remote_addr;

    location / {
    proxy_pass http://backend_servers/;

    }


}

==================================================
docker-compose-deltaonsitetask2.yaml


Version: '2.18.1'
services:
    nginxmess1:
      image: ghcr.io/ameyak04/deltanginxonsite
      container_name: deltacontainernginxmess1
      ports:
        - 8081:80
    nginxmess2:
      image: ghcr.io/ameyak04/deltanginxonsite
      container_name: deltacontainernginxmess2
      ports:
        - 8082:80
    nginxmess3:
      image: ghcr.io/ameyak04/deltanginxonsite
      container_name: deltacontainernginxmess3
      ports:
        - 8083:80

==============================================================



index.html

<h1>Hello World .... This is example1</h1>
<p> hostname is : $(hostname)</p>

Web site 1.
 ================
























===============================================

Reference Material 

ser www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
        worker_connections 768;
        # multi_accept on;
}

http {

        ##
        # Basic Settings
        ##

        sendfile on;
        tcp_nopush on;
        types_hash_max_size 2048;
        # server_tokens off;
        upstream Mess1 {
         server example1.com:80 weight=3;
         server example2.com:80 weight=6;
        }

        # This server accepts all traffic to port 80 and passes it to the upstream.
        # Notice that the upstream name and the proxy_pass need to match.

    server {
            listen 80;
    server_name  localhost;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Real-IP  $remote_addr;




apt-get install nginx-full

https://www.learnbestcoding.com/post/15/hosting-multiple-websites-with-nginx

Go to the Nginx root folder and locate nginx.conf file. Ensure the conf file has the below entry.

oot@vaibhav-Inspiron-3558:/etc/nginx/sites-enabled# ls -al
total 8
drwxr-xr-x 2 root root 4096 Aug 10 21:17 .
drwxr-xr-x 8 root root 4096 Aug 10 21:22 ..
lrwxrwxrwx 1 root root   34 Aug 10 21:17 default -> /etc/nginx/sites-available/default
root@vaibhav-Inspiron-3558:/etc/nginx/sites-enabled# rm default
root@vaibhav-Inspiron-3558:/etc/nginx/sites-enabled# ls -al
total 8
drwxr-xr-x 2 root root 4096 Aug 10 21:44 .
drwxr-xr-x 8 root root 4096 Aug 10 21:22 ..
root@vaibhav-Inspiron-3558:/etc/nginx/sites-enabled# systemctl start nginx


root@vaibhav-Inspiron-3558:/var/www/example1.com# cat *
<h1>Hello World .... This is example1</h1> 

Web site 1.
